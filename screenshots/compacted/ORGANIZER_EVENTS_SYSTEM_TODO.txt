═══════════════════════════════════════════════════════════════
SOCIETY ORGANIZER EVENTS MANAGEMENT SYSTEM - TO DO
═══════════════════════════════════════════════════════════════
Date: 2025-10-10
Status: ⏳ READY TO IMPLEMENT
Based On: Golfer Events System (COMPLETE)

═══════════════════════════════════════════════════════════════
📋 CURRENT STATE - WHAT EXISTS
═══════════════════════════════════════════════════════════════

Organizer Dashboard (Lines 25700-25975):
✅ Tab navigation (Events, Calendar, Profile, Admin)
✅ Event creation form
✅ Event list container
✅ Empty state
✅ Basic event CRUD operations

Current Limitations:
❌ No detailed registration management view
❌ No player roster display
❌ No waitlist management UI
❌ No communication tools
❌ No export functionality
❌ No payment tracking
❌ No advanced event actions
❌ Basic event cards (no registration details)

═══════════════════════════════════════════════════════════════
🎯 WHAT TO BUILD - ORGANIZER FEATURES
═══════════════════════════════════════════════════════════════

Based on golfer system, create ORGANIZER-SPECIFIC views:

┌─────────────────────────────────────────────────────────────┐
│ TAB 1: MY EVENTS (Enhanced Event List)                     │
├─────────────────────────────────────────────────────────────┤
│ Features:                                                   │
│ • Event cards with registration stats                      │
│ • Quick actions per event:                                │
│   - View Registrations                                    │
│   - Edit Event                                            │
│   - Close Registration                                    │
│   - Export Roster                                         │
│   - Send Message to All                                   │
│   - Cancel Event                                          │
│ • Search and filter events                                │
│ • Status indicators (Open, Closed, Full, Past)           │
│ • Revenue tracking per event                              │
│ • Registration progress bar                               │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ TAB 2: REGISTRATIONS (Detailed Management)                 │
├─────────────────────────────────────────────────────────────┤
│ Features:                                                   │
│ • Select event dropdown                                    │
│ • Full player roster table:                               │
│   - Name, Handicap, Email, Phone                         │
│   - Transport, Competition checkboxes                    │
│   - Partner preferences                                  │
│   - Payment status                                       │
│   - Registration date                                    │
│   - Actions per player                                   │
│ • Export options:                                         │
│   - Excel/CSV                                            │
│   - PDF roster                                           │
│   - Print-friendly view                                  │
│ • Bulk actions:                                           │
│   - Send message to selected                             │
│   - Mark as paid                                         │
│   - Move to waitlist                                     │
│   - Remove selected                                      │
│ • Summary stats at top:                                   │
│   - Total registered                                     │
│   - Spots remaining                                      │
│   - Total revenue                                        │
│   - Transport count                                      │
│   - Competition count                                    │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ TAB 3: WAITLIST MANAGEMENT                                  │
├─────────────────────────────────────────────────────────────┤
│ Features:                                                   │
│ • Waitlist table with positions                           │
│ • Promote to registration button                          │
│ • Auto-promotion settings                                 │
│ • Notify waitlist members                                 │
│ • Waitlist cap settings                                   │
│ • Priority reordering (drag & drop)                       │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ TAB 4: PAIRINGS & GROUPS                                    │
├─────────────────────────────────────────────────────────────┤
│ Features:                                                   │
│ • Auto-generate pairings by:                              │
│   - Handicap (balanced groups)                           │
│   - Random                                               │
│   - Partner preferences                                  │
│ • Manual pairing editor                                   │
│ • Tee time assignments                                    │
│ • Starting hole assignments                               │
│ • Print pairings sheet                                    │
│ • Lock pairings (prevent changes)                         │
│ • Export pairings                                         │
└─────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────┐
│ TAB 5: COMMUNICATIONS                                        │
├─────────────────────────────────────────────────────────────┤
│ Features:                                                   │
│ • Message all registered players                          │
│ • Message specific groups                                 │
│ • Template messages:                                      │
│   - Reminder (24h before)                                │
│   - Reminder (2h before)                                 │
│   - Cancellation notice                                  │
│   - Weather update                                       │
│   - Course change                                        │
│   - Payment reminder                                     │
│ • Delivery tracking (sent, read, failed)                  │
│ • Send via:                                               │
│   - In-app chat                                          │
│   - LINE messages                                        │
│   - Email (if integrated)                                │
│   - SMS (if integrated)                                  │
└─────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════
🎨 UI COMPONENTS TO BUILD
═══════════════════════════════════════════════════════════════

1. ENHANCED EVENT CARD
   Similar to golfer cards but showing:
   ```
   ┌────────────────────────────────────┐
   │ [Society Logo] Event Name          │
   │ Date: Oct 10, 2025 at 7:00 AM     │
   │ Course: Pattana Golf Resort        │
   │                                    │
   │ 📊 Registered: 28/40 (70%)        │
   │ 💰 Revenue: ฿98,000               │
   │ ⏰ Closes: Oct 8, 5:00 PM         │
   │                                    │
   │ [View Roster] [Edit] [Close] [▼]  │
   │                                    │
   │ Dropdown actions:                  │
   │ • Export Roster                    │
   │ • Send Message                     │
   │ • Manage Waitlist                  │
   │ • View Pairings                    │
   │ • Cancel Event                     │
   └────────────────────────────────────┘
   ```

2. REGISTRATION TABLE
   ```
   ┌────────────────────────────────────────────────────────┐
   │ Event: Travellers Rest - Oct 10, 2025                  │
   │ [Search] [Export CSV] [Export PDF] [Print]             │
   │                                                         │
   │ Summary: 28 Players | ฿98,000 Revenue | 12 Waitlist   │
   │ Transport: 15 | Competition: 22 | Paid: 20/28          │
   │                                                         │
   │ ┌─────────────────────────────────────────────────┐    │
   │ │ Name      | HCP | Transport | Comp | Paid |    │    │
   │ ├─────────────────────────────────────────────────┤    │
   │ │ Pete Park | 1   | ✓         | ✓    | ✓    | [⋮]│    │
   │ │ John Doe  | 18  | ✗         | ✓    | ✗    | [⋮]│    │
   │ │ ...                                              │    │
   │ └─────────────────────────────────────────────────┘    │
   │                                                         │
   │ Actions per player (⋮):                                │
   │ • View Profile                                         │
   │ • Send Message                                         │
   │ • Mark as Paid/Unpaid                                  │
   │ • Edit Registration                                    │
   │ • Move to Waitlist                                     │
   │ • Remove from Event                                    │
   └────────────────────────────────────────────────────────┘
   ```

3. WAITLIST VIEW
   ```
   ┌────────────────────────────────────────────────────────┐
   │ Event: Travellers Rest - Oct 10, 2025                  │
   │ [Auto-Promote: ON] [Notify All] [Clear Waitlist]       │
   │                                                         │
   │ 12 players on waitlist | 12 spots available            │
   │                                                         │
   │ ┌─────────────────────────────────────────────────┐    │
   │ │ # | Name      | HCP | Registered | Actions     │    │
   │ ├─────────────────────────────────────────────────┤    │
   │ │ 1 | Sarah Lee | 12  | Oct 1, 3pm | [Promote]   │    │
   │ │ 2 | Mike Chen | 8   | Oct 1, 4pm | [Promote]   │    │
   │ │ ...                                              │    │
   │ └─────────────────────────────────────────────────┘    │
   └────────────────────────────────────────────────────────┘
   ```

4. PAIRINGS EDITOR
   ```
   ┌────────────────────────────────────────────────────────┐
   │ Event: Travellers Rest - Oct 10, 2025                  │
   │ [Auto Generate ▼] [Manual Mode] [Lock Pairings] [Print│
   │                                                         │
   │ Generation Options:                                     │
   │ • By Handicap (Balanced)                               │
   │ • Random                                               │
   │ • Honor Partner Preferences                            │
   │                                                         │
   │ Group 1 - Tee 1A - 7:00 AM:                           │
   │ ┌────────────────────────────────┐                     │
   │ │ 1. Pete Park (HCP 1)          │ [Swap] [Remove]    │
   │ │ 2. John Doe (HCP 18)          │ [Swap] [Remove]    │
   │ │ 3. Mike Chen (HCP 8)          │ [Swap] [Remove]    │
   │ │ 4. Sarah Lee (HCP 12)         │ [Swap] [Remove]    │
   │ └────────────────────────────────┘                     │
   │                                                         │
   │ Group 2 - Tee 1A - 7:10 AM:                           │
   │ [... more groups ...]                                  │
   └────────────────────────────────────────────────────────┘
   ```

5. COMMUNICATION CENTER
   ```
   ┌────────────────────────────────────────────────────────┐
   │ Send Message to Event Participants                      │
   │                                                         │
   │ Event: [Travellers Rest - Oct 10, 2025 ▼]             │
   │                                                         │
   │ Recipients:                                            │
   │ ○ All Registered (28 players)                         │
   │ ○ Waitlist Only (12 players)                          │
   │ ○ Unpaid Only (8 players)                             │
   │ ○ Custom Selection                                     │
   │                                                         │
   │ Template: [None ▼] or select:                         │
   │ • 24-Hour Reminder                                    │
   │ • 2-Hour Reminder                                     │
   │ • Weather Update                                      │
   │ • Payment Reminder                                    │
   │                                                         │
   │ Message:                                               │
   │ ┌───────────────────────────────────────────┐         │
   │ │ Hi {name},                                │         │
   │ │                                            │         │
   │ │ Reminder: Travellers Rest event tomorrow! │         │
   │ │ Tee time: 7:00 AM                         │         │
   │ │ ...                                        │         │
   │ └───────────────────────────────────────────┘         │
   │                                                         │
   │ Send via: ☑ Chat  ☑ LINE  ☐ Email  ☐ SMS             │
   │                                                         │
   │ [Preview] [Send Now] [Schedule]                        │
   └────────────────────────────────────────────────────────┘
   ```

═══════════════════════════════════════════════════════════════
💻 CODE STRUCTURE TO IMPLEMENT
═══════════════════════════════════════════════════════════════

File: index.html

New HTML Sections:
1. Enhanced Events Tab (replace current simple list)
   - Sub-tabs: My Events | Registrations | Waitlist | Pairings | Communications
   - Location: After line 25729

2. Registration Management Modal
   - Full-screen or large modal
   - Table view with all player details
   - Action buttons per player
   - Export options

3. Waitlist Management UI
   - Table with drag-and-drop reordering
   - Promote buttons
   - Auto-promotion toggle

4. Pairings Editor Interface
   - Group cards
   - Drag-and-drop player assignments
   - Tee time scheduler
   - Export/print options

5. Communication Center Modal
   - Recipient selector
   - Message composer
   - Template dropdown
   - Send options

New JavaScript Class Methods:
Add to SocietyOrganizerManager class:

// EVENT MANAGEMENT
- showEnhancedEventCard()
- renderEventStats()
- closeRegistration()
- reopenRegistration()
- cancelEvent()
- exportRoster()

// REGISTRATION MANAGEMENT
- loadRegistrations(eventId)
- renderRegistrationTable()
- filterRegistrations(searchTerm)
- markAsPaid(registrationId)
- markAsUnpaid(registrationId)
- removeRegistration(registrationId)
- exportRegistrationsCSV()
- exportRegistrationsPDF()
- sendMessageToPlayer(playerId)

// WAITLIST MANAGEMENT
- loadWaitlist(eventId)
- renderWaitlistTable()
- promoteFromWaitlist(waitlistId)
- autoPromoteSettings()
- notifyWaitlistMembers()
- reorderWaitlist(oldIndex, newIndex)

// PAIRINGS MANAGEMENT
- generatePairings(method) // 'handicap', 'random', 'preferences'
- renderPairingsEditor()
- savePairings()
- lockPairings()
- unlockPairings()
- exportPairings()
- printPairings()
- assignTeeTime(groupId, time)
- swapPlayers(player1Id, player2Id)

// COMMUNICATION
- openCommCenter(eventId)
- loadRecipients(eventId, filter)
- selectTemplate(templateId)
- sendMessage(eventId, recipients, message, channels)
- scheduleMessage(eventId, recipients, message, sendTime)
- trackMessageDelivery(messageId)

═══════════════════════════════════════════════════════════════
🗄️ DATABASE QUERIES NEEDED
═══════════════════════════════════════════════════════════════

Add to SocietyGolfDB class:

// Get registrations with player details
async getEventRegistrations(eventId) {
  return supabase
    .from('event_registrations')
    .select('*, player_profile:player_id(*)')
    .eq('event_id', eventId)
    .order('created_at', { ascending: true });
}

// Get waitlist for event
async getEventWaitlist(eventId) {
  return supabase
    .from('event_waitlist')
    .select('*')
    .eq('event_id', eventId)
    .order('position', { ascending: true });
}

// Promote from waitlist
async promoteWaitlistMember(waitlistId, eventId) {
  // Move from waitlist to registrations
  // Update positions for remaining waitlist
}

// Get event pairings
async getEventPairings(eventId) {
  return supabase
    .from('event_pairings')
    .select('*')
    .eq('event_id', eventId)
    .single();
}

// Save pairings
async saveEventPairings(eventId, pairingsData) {
  return supabase
    .from('event_pairings')
    .upsert({
      event_id: eventId,
      groups: pairingsData,
      locked_at: null,
      updated_at: new Date().toISOString()
    });
}

// Lock pairings
async lockPairings(eventId) {
  return supabase
    .from('event_pairings')
    .update({
      locked_at: new Date().toISOString(),
      locked_by: AppState.currentUser.lineUserId
    })
    .eq('event_id', eventId);
}

// Get event statistics
async getEventStats(eventId) {
  const [registrations, waitlist, revenue] = await Promise.all([
    supabase
      .from('event_registrations')
      .select('want_transport, want_competition')
      .eq('event_id', eventId),
    supabase
      .from('event_waitlist')
      .select('id')
      .eq('event_id', eventId),
    // Calculate revenue based on registrations
  ]);

  return {
    registered: registrations.length,
    waitlist: waitlist.length,
    transportCount: registrations.filter(r => r.want_transport).length,
    competitionCount: registrations.filter(r => r.want_competition).length,
    revenue: calculateRevenue(registrations)
  };
}

═══════════════════════════════════════════════════════════════
🎯 IMPLEMENTATION PRIORITY
═══════════════════════════════════════════════════════════════

PHASE 1: Enhanced Event Cards & Registration View (2-3 hours)
  ✓ Duplicate golfer event card structure
  ✓ Add organizer-specific stats
  ✓ Add quick action buttons
  ✓ Create registration table view
  ✓ Add search/filter functionality
  ✓ Add export to CSV/PDF

PHASE 2: Waitlist Management (1 hour)
  ✓ Create waitlist table UI
  ✓ Add promote functionality
  ✓ Connect to existing waitlist schema
  ✓ Add auto-promotion toggle

PHASE 3: Communication Tools (1-2 hours)
  ✓ Create message composer
  ✓ Add recipient selection
  ✓ Add template messages
  ✓ Integrate with chat system
  ✓ Add LINE integration

PHASE 4: Pairings System (2-3 hours)
  ✓ Auto-generation algorithms
  ✓ Manual editor interface
  ✓ Drag-and-drop functionality
  ✓ Tee time assignments
  ✓ Export/print functions

PHASE 5: Advanced Features (Optional)
  ✓ Payment tracking UI
  ✓ Attendance check-in
  ✓ Analytics dashboard
  ✓ Multi-event management
  ✓ Event cloning/templates

═══════════════════════════════════════════════════════════════
📊 USER STORIES - WHAT ORGANIZERS NEED
═══════════════════════════════════════════════════════════════

As a society organizer, I want to:

1. See all my events at a glance with registration stats
   → So I know which events need attention

2. View detailed roster for each event
   → So I can see who registered and their preferences

3. Export roster to Excel/PDF
   → So I can share with course/print for event day

4. Manage waitlist and promote players when spots open
   → So I can fill all spots efficiently

5. Send messages to all registered players
   → So I can communicate event updates quickly

6. Generate pairings automatically
   → So I can save time organizing groups

7. Track who has paid
   → So I can follow up with unpaid players

8. Close registration when event is full
   → So I can prevent overbooking

9. See revenue per event
   → So I can track finances

10. Contact individual players
    → So I can handle special requests

═══════════════════════════════════════════════════════════════
✅ READY TO START
═══════════════════════════════════════════════════════════════

When ready to implement:

1. Read this document for full context
2. Start with Phase 1 (Enhanced Event Cards)
3. Use golfer system code as template
4. Adapt UI/features for organizer needs
5. Test with existing events and registrations
6. Deploy incrementally (phase by phase)

All database schemas already exist (waitlist, pairings tables)!
Chat system integration ready!
Export functionality patterns available from other features!

Estimated Total Time: 8-12 hours for complete system

═══════════════════════════════════════════════════════════════
END OF ORGANIZER SYSTEM SPECIFICATION
═══════════════════════════════════════════════════════════════
